{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { prisma } from \"../database/prisma\";\nexport var criarComodo = function () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    var _req$body = req.body,\n      imovelId = _req$body.imovelId,\n      tipo = _req$body.tipo,\n      numero = _req$body.numero;\n    if (!imovelId || !tipo || !numero) {\n      return res.status(422).json({\n        mensagem: \"Preencha todos os campos obrigatórios para criar o Comodo.\"\n      });\n    } else {\n      try {\n        var comodo = yield prisma.comodo.create({\n          data: {\n            imovelId: imovelId,\n            tipo: tipo,\n            numero: numero\n          }\n        });\n        return res.json(comodo);\n      } catch (error) {\n        console.error(error);\n        return res.status(500).json({\n          mensagem: \"Erro ao criar Comodo.\"\n        });\n      }\n    }\n  });\n  return function criarComodo(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var pegarComodos = function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    var comodos = yield prisma.comodo.findMany();\n    return res.json(comodos);\n  });\n  return function pegarComodos(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var pegarComodoPorId = function () {\n  var _ref3 = _asyncToGenerator(function* (req, res) {\n    var id = req.params.id;\n    var comodo = yield prisma.comodo.findUnique({\n      where: {\n        id: id\n      }\n    });\n    if (!comodo) {\n      return res.status(404).json({\n        mensagem: \"Comodo não encontrado.\"\n      });\n    }\n    return res.json(comodo);\n  });\n  return function pegarComodoPorId(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var excluirComodo = function () {\n  var _ref4 = _asyncToGenerator(function* (req, res) {\n    var id = req.params.id;\n    try {\n      yield prisma.comodo.delete({\n        where: {\n          id: id\n        }\n      });\n      return res.json({\n        mensagem: \"Comodo excluído com sucesso.\"\n      });\n    } catch (error) {\n      console.error(error);\n      return res.status(500).json({\n        mensagem: \"Erro ao excluir o Comodo.\"\n      });\n    }\n  });\n  return function excluirComodo(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar ComodoController = {\n  criarComodo: criarComodo,\n  pegarComodos: pegarComodos,\n  pegarComodoPorId: pegarComodoPorId,\n  excluirComodo: excluirComodo\n};\nexport default ComodoController;","map":{"version":3,"names":["prisma","criarComodo","_ref","_asyncToGenerator","req","res","_req$body","body","imovelId","tipo","numero","status","json","mensagem","comodo","create","data","error","console","_x","_x2","apply","arguments","pegarComodos","_ref2","comodos","findMany","_x3","_x4","pegarComodoPorId","_ref3","id","params","findUnique","where","_x5","_x6","excluirComodo","_ref4","delete","_x7","_x8","ComodoController"],"sources":["C:/Users/digoR/OneDrive/Área de Trabalho/DEV/Sollos/Deploy/VistoApp_Backend/src/controller/ComodoController.ts"],"sourcesContent":["import { Request, Response } from \"express\";\r\nimport { prisma } from \"../database/prisma\";\r\n\r\nexport const criarComodo = async (req: Request, res: Response) => {\r\n  const { imovelId, tipo, numero } = req.body;\r\n\r\n  if (!imovelId || !tipo || !numero) {\r\n    return res.status(422).json({\r\n      mensagem: \"Preencha todos os campos obrigatórios para criar o Comodo.\",\r\n    });\r\n  } else {\r\n    try {\r\n      const comodo = await prisma.comodo.create({\r\n        data: {\r\n          imovelId,\r\n          tipo,\r\n          numero,\r\n        },\r\n      });\r\n\r\n      return res.json(comodo);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return res.status(500).json({ mensagem: \"Erro ao criar Comodo.\" });\r\n    }\r\n  }\r\n};\r\n\r\nexport const pegarComodos = async (req: Request, res: Response) => {\r\n  const comodos = await prisma.comodo.findMany();\r\n  return res.json(comodos);\r\n};\r\n\r\nexport const pegarComodoPorId = async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n  const comodo = await prisma.comodo.findUnique({\r\n    where: { id },\r\n  });\r\n\r\n  if (!comodo) {\r\n    return res.status(404).json({ mensagem: \"Comodo não encontrado.\" });\r\n  }\r\n\r\n  return res.json(comodo);\r\n};\r\n\r\nexport const excluirComodo = async (req: Request, res: Response) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    await prisma.comodo.delete({\r\n      where: { id },\r\n    });\r\n\r\n    return res.json({ mensagem: \"Comodo excluído com sucesso.\" });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).json({ mensagem: \"Erro ao excluir o Comodo.\" });\r\n  }\r\n};\r\n\r\nconst ComodoController = {\r\n  criarComodo,\r\n  pegarComodos,\r\n  pegarComodoPorId,\r\n  excluirComodo,\r\n};\r\nexport default ComodoController;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}