{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { prisma } from \"../database/prisma\";\nexport var criarVinculo = function () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    var _req$body = req.body,\n      imovelId = _req$body.imovelId,\n      proprietarioId = _req$body.proprietarioId;\n    if (!imovelId || !proprietarioId) {\n      return res.status(422).json({\n        mensagem: \"Para criar um Vínculo, preencha todos os campos!\"\n      });\n    } else {\n      var vinculo = yield prisma.vinculo.create({\n        data: {\n          imovelId: imovelId,\n          proprietarioId: proprietarioId\n        }\n      });\n      return res.json(vinculo);\n    }\n  });\n  return function criarVinculo(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var pegarVinculos = function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    var vinculos = yield prisma.vinculo.findMany();\n    return res.json(vinculos);\n  });\n  return function pegarVinculos(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar VinculoController = {\n  criarVinculo: criarVinculo,\n  pegarVinculos: pegarVinculos\n};\nexport default VinculoController;","map":{"version":3,"names":["prisma","criarVinculo","_ref","_asyncToGenerator","req","res","_req$body","body","imovelId","proprietarioId","status","json","mensagem","vinculo","create","data","_x","_x2","apply","arguments","pegarVinculos","_ref2","vinculos","findMany","_x3","_x4","VinculoController"],"sources":["C:/Users/digoR/OneDrive/Área de Trabalho/DEV/Sollos/Deploy/VistoApp_Backend/src/controller/VinculoController.ts"],"sourcesContent":["import { Request, Response } from \"express\";\r\nimport { prisma } from \"../database/prisma\";\r\n\r\nexport const criarVinculo = async (req: Request, res: Response) => {\r\n  const { imovelId, proprietarioId } = req.body;\r\n\r\n  if (!imovelId || !proprietarioId) {\r\n    return res.status(422).json({\r\n      mensagem: \"Para criar um Vínculo, preencha todos os campos!\",\r\n    });\r\n  } else {\r\n    const vinculo = await prisma.vinculo.create({\r\n      data: {\r\n        imovelId,\r\n        proprietarioId,\r\n      },\r\n    });\r\n\r\n    return res.json(vinculo);\r\n  }\r\n};\r\n\r\nexport const pegarVinculos = async (req: Request, res: Response) => {\r\n  const vinculos = await prisma.vinculo.findMany();\r\n\r\n  return res.json(vinculos);\r\n};\r\n\r\nconst VinculoController = {\r\n  criarVinculo,\r\n  pegarVinculos,\r\n};\r\nexport default VinculoController;\r\n"],"mappings":";AACA,SAASA,MAAM;AAEf,OAAO,IAAMC,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,GAAY,EAAEC,GAAa,EAAK;IACjE,IAAAC,SAAA,GAAqCF,GAAG,CAACG,IAAI;MAArCC,QAAQ,GAAAF,SAAA,CAARE,QAAQ;MAAEC,cAAc,GAAAH,SAAA,CAAdG,cAAc;IAEhC,IAAI,CAACD,QAAQ,IAAI,CAACC,cAAc,EAAE;MAChC,OAAOJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAMC,OAAO,SAASb,MAAM,CAACa,OAAO,CAACC,MAAM,CAAC;QAC1CC,IAAI,EAAE;UACJP,QAAQ,EAARA,QAAQ;UACRC,cAAc,EAAdA;QACF;MACF,CAAC,CAAC;MAEF,OAAOJ,GAAG,CAACM,IAAI,CAACE,OAAO,CAAC;IAC1B;EACF,CAAC;EAAA,gBAjBYZ,YAAYA,CAAAe,EAAA,EAAAC,GAAA;IAAA,OAAAf,IAAA,CAAAgB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAiBxB;AAED,OAAO,IAAMC,aAAa;EAAA,IAAAC,KAAA,GAAAlB,iBAAA,CAAG,WAAOC,GAAY,EAAEC,GAAa,EAAK;IAClE,IAAMiB,QAAQ,SAAStB,MAAM,CAACa,OAAO,CAACU,QAAQ,CAAC,CAAC;IAEhD,OAAOlB,GAAG,CAACM,IAAI,CAACW,QAAQ,CAAC;EAC3B,CAAC;EAAA,gBAJYF,aAAaA,CAAAI,GAAA,EAAAC,GAAA;IAAA,OAAAJ,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAIzB;AAED,IAAMO,iBAAiB,GAAG;EACxBzB,YAAY,EAAZA,YAAY;EACZmB,aAAa,EAAbA;AACF,CAAC;AACD,eAAeM,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}