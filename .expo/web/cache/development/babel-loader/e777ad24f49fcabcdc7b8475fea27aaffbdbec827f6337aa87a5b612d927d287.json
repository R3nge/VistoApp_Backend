{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { prisma } from \"../database/prisma\";\nexport var criarVistoriador = function () {\n  var _ref = _asyncToGenerator(function* (req, res) {\n    var _req$body = req.body,\n      cpf = _req$body.cpf,\n      nome = _req$body.nome,\n      tel = _req$body.tel,\n      email = _req$body.email,\n      enderecoId = _req$body.enderecoId;\n    if (!cpf || !nome || !tel || !email || !enderecoId) {\n      return res.status(422).json({\n        mensagem: \"Preencha todos os campos obrigatórios para criar o Vistoriador.\"\n      });\n    } else {\n      try {\n        var vistoriador = yield prisma.vistoriador.create({\n          data: {\n            cpf: cpf,\n            nome: nome,\n            tel: tel,\n            email: email,\n            enderecoId: enderecoId\n          }\n        });\n        return res.json(vistoriador);\n      } catch (error) {\n        console.error(error);\n        return res.status(500).json({\n          mensagem: \"Erro ao criar Vistoriador.\"\n        });\n      }\n    }\n  });\n  return function criarVistoriador(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var pegarVistoriadores = function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    var vistoriadores = yield prisma.vistoriador.findMany();\n    return res.json(vistoriadores);\n  });\n  return function pegarVistoriadores(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar VistoriadorController = {\n  criarVistoriador: criarVistoriador,\n  pegarVistoriadores: pegarVistoriadores\n};\nexport default VistoriadorController;","map":{"version":3,"names":["prisma","criarVistoriador","_ref","_asyncToGenerator","req","res","_req$body","body","cpf","nome","tel","email","enderecoId","status","json","mensagem","vistoriador","create","data","error","console","_x","_x2","apply","arguments","pegarVistoriadores","_ref2","vistoriadores","findMany","_x3","_x4","VistoriadorController"],"sources":["C:/Users/digoR/OneDrive/Área de Trabalho/DEV/Sollos/Deploy/VistoApp_Backend/src/controller/VistoriadorController.ts"],"sourcesContent":["import { Request, Response } from \"express\";\r\nimport { prisma } from \"../database/prisma\";\r\n\r\n// Criar um único Vistoriador\r\nexport const criarVistoriador = async (req: Request, res: Response) => {\r\n  // Extrai os dados necessários do corpo da requisição\r\n  const { cpf, nome, tel, email, enderecoId } = req.body;\r\n\r\n  // Verifica se algum dos campos essenciais está ausente\r\n  if (!cpf || !nome || !tel || !email || !enderecoId) {\r\n    return res.status(422).json({\r\n      mensagem:\r\n        \"Preencha todos os campos obrigatórios para criar o Vistoriador.\",\r\n    });\r\n  } else {\r\n    try {\r\n      // Cria o Vistoriador no banco de dados\r\n      const vistoriador = await prisma.vistoriador.create({\r\n        data: {\r\n          cpf,\r\n          nome,\r\n          tel,\r\n          email,\r\n          enderecoId,\r\n        },\r\n      });\r\n\r\n      // Retorna o Vistoriador criado como resposta\r\n      return res.json(vistoriador);\r\n    } catch (error) {\r\n      console.error(error);\r\n      return res.status(500).json({ mensagem: \"Erro ao criar Vistoriador.\" });\r\n    }\r\n  }\r\n};\r\n\r\n// Obter todos os Vistoriadores\r\nexport const pegarVistoriadores = async (req: Request, res: Response) => {\r\n  // Busca todos os Vistoriadores no banco de dados usando o Prisma\r\n  const vistoriadores = await prisma.vistoriador.findMany();\r\n\r\n  // Retorna a lista de Vistoriadores como resposta\r\n  return res.json(vistoriadores);\r\n};\r\n\r\nconst VistoriadorController = {\r\n  criarVistoriador,\r\n  pegarVistoriadores,\r\n};\r\nexport default VistoriadorController;\r\n"],"mappings":";AACA,SAASA,MAAM;AAGf,OAAO,IAAMC,gBAAgB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,GAAY,EAAEC,GAAa,EAAK;IAErE,IAAAC,SAAA,GAA8CF,GAAG,CAACG,IAAI;MAA9CC,GAAG,GAAAF,SAAA,CAAHE,GAAG;MAAEC,IAAI,GAAAH,SAAA,CAAJG,IAAI;MAAEC,GAAG,GAAAJ,SAAA,CAAHI,GAAG;MAAEC,KAAK,GAAAL,SAAA,CAALK,KAAK;MAAEC,UAAU,GAAAN,SAAA,CAAVM,UAAU;IAGzC,IAAI,CAACJ,GAAG,IAAI,CAACC,IAAI,IAAI,CAACC,GAAG,IAAI,CAACC,KAAK,IAAI,CAACC,UAAU,EAAE;MAClD,OAAOP,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,QAAQ,EACN;MACJ,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAI;QAEF,IAAMC,WAAW,SAAShB,MAAM,CAACgB,WAAW,CAACC,MAAM,CAAC;UAClDC,IAAI,EAAE;YACJV,GAAG,EAAHA,GAAG;YACHC,IAAI,EAAJA,IAAI;YACJC,GAAG,EAAHA,GAAG;YACHC,KAAK,EAALA,KAAK;YACLC,UAAU,EAAVA;UACF;QACF,CAAC,CAAC;QAGF,OAAOP,GAAG,CAACS,IAAI,CAACE,WAAW,CAAC;MAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,OAAOd,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,QAAQ,EAAE;QAA6B,CAAC,CAAC;MACzE;IACF;EACF,CAAC;EAAA,gBA9BYd,gBAAgBA,CAAAoB,EAAA,EAAAC,GAAA;IAAA,OAAApB,IAAA,CAAAqB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA8B5B;AAGD,OAAO,IAAMC,kBAAkB;EAAA,IAAAC,KAAA,GAAAvB,iBAAA,CAAG,WAAOC,GAAY,EAAEC,GAAa,EAAK;IAEvE,IAAMsB,aAAa,SAAS3B,MAAM,CAACgB,WAAW,CAACY,QAAQ,CAAC,CAAC;IAGzD,OAAOvB,GAAG,CAACS,IAAI,CAACa,aAAa,CAAC;EAChC,CAAC;EAAA,gBANYF,kBAAkBA,CAAAI,GAAA,EAAAC,GAAA;IAAA,OAAAJ,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GAM9B;AAED,IAAMO,qBAAqB,GAAG;EAC5B9B,gBAAgB,EAAhBA,gBAAgB;EAChBwB,kBAAkB,EAAlBA;AACF,CAAC;AACD,eAAeM,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}