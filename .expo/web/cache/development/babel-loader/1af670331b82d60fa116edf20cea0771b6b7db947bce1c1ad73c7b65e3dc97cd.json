{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport jwt from \"jsonwebtoken\";\nfunction authenticateJWT(req, res, next) {\n  var tokenHeader = req.header(\"Authorization\");\n  if (!tokenHeader) {\n    return res.status(400).json({\n      success: false,\n      message: \"Token inválido.\"\n    });\n  }\n  var _tokenHeader$split = tokenHeader.split(\" \"),\n    _tokenHeader$split2 = _slicedToArray(_tokenHeader$split, 2),\n    prefix = _tokenHeader$split2[0],\n    token = _tokenHeader$split2[1];\n  if (prefix !== \"Bearer\") return res.status(401).json({\n    success: false,\n    message: \"Formato do token inválido.\"\n  });\n  if (!token) {\n    return res.status(401).json({\n      success: false,\n      message: \"Token ausente.\"\n    });\n  }\n  jwt.verify(token, \"password\", function (err, user) {\n    if (err) {\n      return res.status(403).json({\n        success: false,\n        message: \"Não autorizado.\"\n      });\n    }\n    req.user = user;\n    next();\n  });\n}\nexport default authenticateJWT;","map":{"version":3,"names":["jwt","authenticateJWT","req","res","next","tokenHeader","header","status","json","success","message","_tokenHeader$split","split","_tokenHeader$split2","_slicedToArray","prefix","token","verify","err","user"],"sources":["C:/Users/digoR/OneDrive/Área de Trabalho/DEV/Sollos/Deploy/VistoApp_Backend/src/middleware/AuthMiddleware.ts"],"sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport { Request, Response, NextFunction } from \"express\";\r\n\r\nfunction authenticateJWT(req: Request, res: Response, next: NextFunction) {\r\n  const tokenHeader = req.header(\"Authorization\");\r\n\r\n  if (!tokenHeader) {\r\n    return res.status(400).json({ success: false, message: \"Token inválido.\" });\r\n  }\r\n\r\n  const [prefix, token] = tokenHeader.split(\" \");\r\n\r\n  if (prefix !== \"Bearer\")\r\n    return res\r\n      .status(401)\r\n      .json({ success: false, message: \"Formato do token inválido.\" });\r\n\r\n  if (!token) {\r\n    return res.status(401).json({ success: false, message: \"Token ausente.\" });\r\n  }\r\n\r\n  jwt.verify(token, \"password\", (err, user) => {\r\n    if (err) {\r\n      return res\r\n        .status(403)\r\n        .json({ success: false, message: \"Não autorizado.\" });\r\n    }\r\n    req.user = user;\r\n    next();\r\n  });\r\n}\r\n\r\nexport default authenticateJWT;\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,cAAc;AAG9B,SAASC,eAAeA,CAACC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,EAAE;EACxE,IAAMC,WAAW,GAAGH,GAAG,CAACI,MAAM,CAAC,eAAe,CAAC;EAE/C,IAAI,CAACD,WAAW,EAAE;IAChB,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAkB,CAAC,CAAC;EAC7E;EAEA,IAAAC,kBAAA,GAAwBN,WAAW,CAACO,KAAK,CAAC,GAAG,CAAC;IAAAC,mBAAA,GAAAC,cAAA,CAAAH,kBAAA;IAAvCI,MAAM,GAAAF,mBAAA;IAAEG,KAAK,GAAAH,mBAAA;EAEpB,IAAIE,MAAM,KAAK,QAAQ,EACrB,OAAOZ,GAAG,CACPI,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;IAAEC,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAA6B,CAAC,CAAC;EAEpE,IAAI,CAACM,KAAK,EAAE;IACV,OAAOb,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAiB,CAAC,CAAC;EAC5E;EAEAV,GAAG,CAACiB,MAAM,CAACD,KAAK,EAAE,UAAU,EAAE,UAACE,GAAG,EAAEC,IAAI,EAAK;IAC3C,IAAID,GAAG,EAAE;MACP,OAAOf,GAAG,CACPI,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAkB,CAAC,CAAC;IACzD;IACAR,GAAG,CAACiB,IAAI,GAAGA,IAAI;IACff,IAAI,CAAC,CAAC;EACR,CAAC,CAAC;AACJ;AAEA,eAAeH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}