{"ast":null,"code":"import { z } from \"zod\";\nvar userCreateSchema = z.object({\n  body: z.object({\n    fullName: z.string({\n      required_error: \"O nome completo é obrigatório.\"\n    }).max(50).min(5),\n    password: z.string({\n      required_error: \"A senha é obrigatória.\"\n    }).max(50).min(5),\n    confirmPassword: z.string({\n      required_error: \"A confirmação de senha é obrigatória.\"\n    }),\n    birthDate: z.string({\n      required_error: \"Por favor, selecione uma data e hora.\",\n      invalid_type_error: \"Isso não é uma data!\"\n    }).pipe(z.coerce.date()).refine(function (date) {\n      var ageDifMs = Date.now() - date.getTime();\n      var ageDate = new Date(ageDifMs);\n      var age = Math.abs(ageDate.getUTCFullYear() - 1970);\n      return age >= 18;\n    }, {\n      message: \"Você deve ter 18 anos ou mais\"\n    }),\n    email: z.string({\n      required_error: \"O e-mail é obrigatório.\"\n    }).max(50).email(\"E-mail inválido.\")\n  }).superRefine(function (_ref, ctx) {\n    var confirmPassword = _ref.confirmPassword,\n      password = _ref.password;\n    if (confirmPassword !== password) {\n      ctx.addIssue({\n        code: \"custom\",\n        message: \"As senhas não coincidiram.\"\n      });\n    }\n  })\n});\nvar userLoginSchema = z.object({\n  body: z.object({\n    email: z.string({\n      required_error: \"O e-mail é obrigatório.\"\n    }).email(\"E-mail inválido.\")\n  })\n});\nexport { userCreateSchema, userLoginSchema };","map":{"version":3,"names":["z","userCreateSchema","object","body","fullName","string","required_error","max","min","password","confirmPassword","birthDate","invalid_type_error","pipe","coerce","date","refine","ageDifMs","Date","now","getTime","ageDate","age","Math","abs","getUTCFullYear","message","email","superRefine","_ref","ctx","addIssue","code","userLoginSchema"],"sources":["C:/Users/digoR/OneDrive/Área de Trabalho/DEV/Sollos/Deploy/VistoApp_Backend/src/schemas/userSchema.ts"],"sourcesContent":["import { z } from \"zod\";\r\n\r\nconst userCreateSchema = z.object({\r\n  body: z\r\n    .object({\r\n      fullName: z\r\n        .string({\r\n          required_error: \"O nome completo é obrigatório.\",\r\n        })\r\n        .max(50)\r\n        .min(5),\r\n      password: z\r\n        .string({\r\n          required_error: \"A senha é obrigatória.\",\r\n        })\r\n        .max(50)\r\n        .min(5),\r\n      confirmPassword: z.string({\r\n        required_error: \"A confirmação de senha é obrigatória.\",\r\n      }),\r\n      birthDate: z\r\n        .string({\r\n          required_error: \"Por favor, selecione uma data e hora.\",\r\n          invalid_type_error: \"Isso não é uma data!\",\r\n        })\r\n        .pipe(z.coerce.date())\r\n        .refine(\r\n          (date) => {\r\n            const ageDifMs = Date.now() - date.getTime();\r\n            const ageDate = new Date(ageDifMs);\r\n\r\n            const age = Math.abs(ageDate.getUTCFullYear() - 1970);\r\n\r\n            return age >= 18;\r\n          },\r\n          { message: \"Você deve ter 18 anos ou mais\" }\r\n        ),\r\n      email: z\r\n        .string({\r\n          required_error: \"O e-mail é obrigatório.\",\r\n        })\r\n        .max(50)\r\n        .email(\"E-mail inválido.\"),\r\n    })\r\n    .superRefine(({ confirmPassword, password }, ctx) => {\r\n      if (confirmPassword !== password) {\r\n        ctx.addIssue({\r\n          code: \"custom\",\r\n          message: \"As senhas não coincidiram.\",\r\n        });\r\n      }\r\n    }),\r\n});\r\n\r\nconst userLoginSchema = z.object({\r\n  body: z.object({\r\n    email: z\r\n      .string({\r\n        required_error: \"O e-mail é obrigatório.\",\r\n      })\r\n      .email(\"E-mail inválido.\"),\r\n  }),\r\n});\r\n\r\nexport { userCreateSchema, userLoginSchema };\r\n"],"mappings":"AAAA,SAASA,CAAC,QAAQ,KAAK;AAEvB,IAAMC,gBAAgB,GAAGD,CAAC,CAACE,MAAM,CAAC;EAChCC,IAAI,EAAEH,CAAC,CACJE,MAAM,CAAC;IACNE,QAAQ,EAAEJ,CAAC,CACRK,MAAM,CAAC;MACNC,cAAc,EAAE;IAClB,CAAC,CAAC,CACDC,GAAG,CAAC,EAAE,CAAC,CACPC,GAAG,CAAC,CAAC,CAAC;IACTC,QAAQ,EAAET,CAAC,CACRK,MAAM,CAAC;MACNC,cAAc,EAAE;IAClB,CAAC,CAAC,CACDC,GAAG,CAAC,EAAE,CAAC,CACPC,GAAG,CAAC,CAAC,CAAC;IACTE,eAAe,EAAEV,CAAC,CAACK,MAAM,CAAC;MACxBC,cAAc,EAAE;IAClB,CAAC,CAAC;IACFK,SAAS,EAAEX,CAAC,CACTK,MAAM,CAAC;MACNC,cAAc,EAAE,uCAAuC;MACvDM,kBAAkB,EAAE;IACtB,CAAC,CAAC,CACDC,IAAI,CAACb,CAAC,CAACc,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBC,MAAM,CACL,UAACD,IAAI,EAAK;MACR,IAAME,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,IAAI,CAACK,OAAO,CAAC,CAAC;MAC5C,IAAMC,OAAO,GAAG,IAAIH,IAAI,CAACD,QAAQ,CAAC;MAElC,IAAMK,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACH,OAAO,CAACI,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC;MAErD,OAAOH,GAAG,IAAI,EAAE;IAClB,CAAC,EACD;MAAEI,OAAO,EAAE;IAAgC,CAC7C,CAAC;IACHC,KAAK,EAAE3B,CAAC,CACLK,MAAM,CAAC;MACNC,cAAc,EAAE;IAClB,CAAC,CAAC,CACDC,GAAG,CAAC,EAAE,CAAC,CACPoB,KAAK,CAAC,kBAAkB;EAC7B,CAAC,CAAC,CACDC,WAAW,CAAC,UAAAC,IAAA,EAAgCC,GAAG,EAAK;IAAA,IAArCpB,eAAe,GAAAmB,IAAA,CAAfnB,eAAe;MAAED,QAAQ,GAAAoB,IAAA,CAARpB,QAAQ;IACvC,IAAIC,eAAe,KAAKD,QAAQ,EAAE;MAChCqB,GAAG,CAACC,QAAQ,CAAC;QACXC,IAAI,EAAE,QAAQ;QACdN,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC;AACL,CAAC,CAAC;AAEF,IAAMO,eAAe,GAAGjC,CAAC,CAACE,MAAM,CAAC;EAC/BC,IAAI,EAAEH,CAAC,CAACE,MAAM,CAAC;IACbyB,KAAK,EAAE3B,CAAC,CACLK,MAAM,CAAC;MACNC,cAAc,EAAE;IAClB,CAAC,CAAC,CACDqB,KAAK,CAAC,kBAAkB;EAC7B,CAAC;AACH,CAAC,CAAC;AAEF,SAAS1B,gBAAgB,EAAEgC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}